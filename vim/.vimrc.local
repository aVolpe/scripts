" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:

"FUNCTIONS {
" Matemática
fu! SumFunc() range
    let old = @a
    normal gv"ay
    let sel=@a
    let @a=old
    let t:r=0
    try
        exe 'let t:r = ' . join(split(sel,'\n'), '+')
        " call append(a:lastline, printf("Sum: %.02f", res))
    catch
        return -1
    endtry
    echo t:r 
    let @" = t:r
    return 0
endfu

fu! PromFunc() range
    let old = @a
    normal gv"ay
    let sel=@a
    let @a=old
    let t:r=0.0
    let t:c=0.0
    try
        exe 'let t:r = ' . join(split(sel,'\n'), '+')
        let t:c = len(split(sel, '\n'))
    catch
        return -1
    endtry
    let t:r = t:r * 1.0
    let t:c = t:c * 1.0
    echo t:r
    echo t:c
    echo "--"
    let t:r = t:r / (1.0 * t:c)
    echo t:r 
    let @" = string(t:r)
    return 0
endfu

function! RenameFile()
    let old_name = expand('%')
    let new_name = input('New file name: ', expand('%'), 'file')
    if new_name != '' && new_name != old_name
        exec ':saveas ' . new_name
        exec ':silent !rm ' . old_name
        redraw!
    endif
endfunction
map <leader>R :call RenameFile()<cr>
vnoremap <F3> :call SumFunc()<CR>
vnoremap <F4> :call PromFunc()<CR>
noremap <F5> :PreviewMarkdown<CR>
" }

" Tab y configuración global {
set history=10000
set mouse=                      " Disable mouse
set shiftwidth=4                " Use indents of 4 spaces
set expandtab                   " Tabs are spaces, not tabs
set tabstop=4                   " An indentation every four columns
set nolist
set softtabstop=4             " Let backspace delete indent
set nopaste
set nonumber

set fileencodings=ucs-bom,utf8,prc
set spell
set spelllang=es,en

"set shell=/usr/bin/zsh\ -i
"set shellcmdflag+=i
"}

" Maps útiles {
nnoremap K i<CR><Esc>

" Navegación {{
imap jj <Esc><Esc><Esc>
imap jw <Esc>:w<CR>a
imap jk <Esc>:w<CR>
" }}

" Resize options {{
nnoremap <silent> <Leader>eh :exe "resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> <Leader>rh :exe "resize " . (winheight(0) * 2/3)<CR>
nnoremap <silent> <Leader>ev :exe "vertical resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> <Leader>rv :exe "vertical resize " . (winheight(0) * 2/3)<CR>
" }}

"Ejecuta el archivo actual con ,r
nnoremap <leader>r :!%:p<CR>
command! -nargs=* -complete=shellcmd R new | setlocal buftype=nofile bufhidden=hide noswapfile | r !<args>

"" Switch to alternate file
map <leader>h :bnext<cr>
map <leader>l :bprevious<cr>"


"nnoremap g^ gUiW
"nnoremap gv guiW
"nunmap g^ gUiW
"nunmap gv guiW

" }


augroup FixFileType
    au BufRead,BufNewFile *.md set filetype=markdown
    au BufRead,BufNewFile *.tex set filetype=tex
    au BufNewFile,BufRead *.cs set foldmethod=syntax
augroup END

au FileType xml setlocal equalprg=xmllint\ --format\ --recover\ -\ 2>/dev/null
let g:indent_guides_enable_on_vim_startup = 0

" Colorscheme {
colorscheme hybrid
set background=dark
hi clear SpellBad
hi SpellBad cterm=underline,bold ctermfg=red
" Transparent background
hi Normal ctermbg=none
" Match pairing http://stackoverflow.com/questions/10746750/set-vim-bracket-highlighting-colors
hi MatchParen cterm=bold ctermbg=none ctermfg=magenta
" }

" Per file config {

" GIT {
au FileType gitcommit set fileencoding=utf8
set diffopt+=vertical
set scrolloff=10
" }

" Tex{

augroup TexConfig
    au FileType tex iab enfemería enfermería
    au FileType tex set conceallevel=0
augroup END
" Disable conceallevel (reemplazar letras por su versión formateada)
" }

" Vimwiki {
" See http://stackoverflow.com/questions/1313171/vim-combining-autocmd
augroup VimwikiAutowrite
    au FileType vimwiki set nobackup
    au FileType vimwiki set nowritebackup
    au FileType vimwiki set noswapfile
    au FileType vimwiki set autowrite
    au FocusLost *.wiki :w
    au FileType vimwiki set autowrite
augroup END

"}

" Markdown {
au FileType markdown set wrap
au FileType markdown set textwidth=80
" }
" }

" Plugins: {

" Plugin: Prompline {
"function! Noscrollbar(...)
"""let w:airline_section_z = '%{noscrollbar#statusline(9,'' '',''█'',[''▐''],[''▌''])}'
"""let w:airline_section_z = '%{noscrollbar#statusline(9,''-'',''='')}'
"""let w:airline_section_z = '%{noscrollbar#statusline(10,'' '',''॥'')}'
"let w:airline_section_z = '%{noscrollbar#statusline(15,'' '',''█'',[''▐''],[''▌''])}'
"""let w:airline_section_z = '%{noscrollbar#statusline(9,''■'',''◫'',[''◧''],[''◨''])}'
"endfunction
"call airline#add_statusline_func('Noscrollbar')


"let g:promptline_preset = {
"\'b'    : [ promptline#slices#cwd() ],
"\'warn' : [ promptline#slices#last_exit_code() ],
"\'x'    : [ promptline#slices#vcs_branch() ],
"\'z'    : [ "$(date '+%a %d %b %r')" ]}

" }

" Plugin: LatexBox {
"" Latexbox options
let g:LatexBox_quickfix = 1
let g:LatexBox_latexmk_preview_continuously=1
let g:LatexBox_latexmk_async=1
let g:LatexBox_latexmk_options = "-pvc -pdf -dvi-"
let g:LatexBox_build_dir = "target"
let g:LatexBox_Folding = 1
let g:PreviewBrowsers = "xdg-open"
" }

" Plugin: Startify {
"" Cabecera y pie:
let g:startify_custom_header =
            \ map(split(system('fortune | cowsay -f $(ls /usr/share/cows/ | shuf -n1)'), '\n'), '"   ". v:val') + ['']
let g:startify_bookmarks = [ '~/.vimrc.local', 
            \ '~/.vimrc.bundles.local' ]
autocmd User Startified setlocal cursorline
let g:startify_skiplist = [
            \ 'COMMIT_EDITMSG',
            \ '.vimrc.local',
            \ '.vimrc.bundles.local'
            \ ]
""Tema
highlight StartifyBracket ctermfg=240
highlight StartifyFooter  ctermfg=114
highlight StartifyHeader  ctermfg=114
highlight StartifyNumber  ctermfg=215
highlight StartifyPath    ctermfg=245
highlight StartifySlash   ctermfg=240
highlight StartifySpecial ctermfg=240

" }

" Plugin: Peekaboo {
let g:peekaboo_window = 'rightbelow 30new'

"}

" Plugin: Ack vim {
if executable('ag')
    let g:ackprg = 'ag --nogroup --nocolor --column'
endif
" }

" Plugin: AutoPairs  {
let g:AutoPairsFlyMode = 0
let g:AutoPairsShortcutBackInsert = '<M-b>'

" }

" Plugin: Sayonara {
" Close buffer with gs
nnoremap gs :Sayonara<cr>
nnoremap gS :Sayonara!<cr>
" }

" Plugin: NeoComplCache {
let g:neocomplcache_enable_camel_case_completion = 1
let g:neocomplcache_enable_underbar_completion = 0
" }

" Plugin: easymotion {
map  / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
map  n <Plug>(easymotion-next)
map  N <Plug>(easymotion-prev)
"" Navegación con espacio l
"map <Leader>l <Plug>(easymotion-lineforward)
"map <Leader>j <Plug>(easymotion-j)
"map <Leader>k <Plug>(easymotion-k)
"map <Leader>h <Plug>(easymotion-linebackward)
let g:EasyMotion_startofline = 0 " keep cursor colum when JK motion
" }

" Plugin: syntastic {
let g:syntastic_java_checkers = ['']
let g:syntastic_always_populate_loc_list = 1
" }

" }
" Bugs ZONE

" Fix some problems with the <esc> key {
let g:spf13_no_omni_complete = 0
imap <Esc> <Esc><Esc><Esc>
" }

